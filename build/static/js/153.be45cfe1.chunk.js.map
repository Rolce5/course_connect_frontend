{"version":3,"file":"static/js/153.be45cfe1.chunk.js","mappings":"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","sources":["components/QuizReviewSection.js"],"sourcesContent":["// import { FiAlertTriangle, FiBookOpen, FiCheck, FiInfo } from \"react-icons/fi\";\n// import { Link } from \"react-router-dom\";\n\n// const QuizReviewSection = ({\n//   quizScore,\n//   bestScore,\n//   quizAttempts,\n//   weakTopics,\n//   currentQuiz,\n//   selectedAnswers,\n//   attemptsLeft,\n//   courseId,\n//   prepareQuizRetake,\n// }) => {\n//   console.log(\"current quiz:\", currentQuiz);\n//   console.log(\"Weak topics quiz:\", weakTopics);\n//   return (\n//     <div className=\"mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n//       <div className=\"flex flex-col space-y-4\">\n//         <div className=\"flex items-center justify-between\">\n//           <div className=\"flex items-center\">\n//             {quizScore >= 70 ? (\n//               <FiCheck className=\"text-green-500 mr-2 text-xl\" />\n//             ) : (\n//               <FiInfo className=\"text-yellow-500 mr-2 text-xl\" />\n//             )}\n//             <h3 className=\"text-lg font-semibold\">\n//               Quiz {quizScore >= 70 ? \"Passed\" : \"Review Needed\"}\n//               {\": \"} {quizScore}%\n//             </h3>\n//           </div>\n//           <div className=\"text-sm text-gray-600\">\n//             Best: {bestScore}% â€¢ Attempts: {quizAttempts.length}/3\n//           </div>\n//         </div>\n\n//         {quizScore < 70 ? (\n//           <div className=\"p-3 bg-yellow-50 border border-yellow-200 rounded\">\n//             <div className=\"flex items-start\">\n//               <FiBookOpen className=\"text-yellow-500 mr-2 mt-0.5 flex-shrink-0\" />\n//               <div>\n//                 <h4 className=\"font-medium\">Recommended Review</h4>\n//                 <p className=\"text-sm mb-2\">\n//                   Focus on these topics before retrying:\n//                 </p>\n//                 <ul className=\"space-y-2\">\n//                   {weakTopics.map((topic, i) => {\n//                     const questionWithTopic = currentQuiz.questions.find(\n//                       (q) => q.topic === topic\n//                     );\n//                     return (\n//                       <li key={i} className=\"flex items-start\">\n//                         <FiAlertTriangle className=\"text-red-400 mr-2 mt-0.5 flex-shrink-0\" />\n//                         <div>\n//                           <p className=\"font-medium\">{topic}</p>\n//                           {questionWithTopic?.hint && (\n//                             <p className=\"text-xs text-gray-600 mt-1\">\n//                               {questionWithTopic.hint} dd\n//                             </p>\n//                           )}\n//                           <Link\n//                             to={`/courses/${courseId}/resources?topic=${encodeURIComponent(topic)}`}\n//                             className=\"text-xs text-blue-600 hover:underline mt-1 inline-block\"\n//                           >\n//                             Review Resources\n//                           </Link>\n//                         </div>\n//                       </li>\n//                     );\n//                   })}\n//                 </ul>\n//               </div>\n//             </div>\n//           </div>\n//         ) : (\n//           <div className=\"p-3 bg-green-50 border border-green-200 rounded\">\n//             <div className=\"flex items-start\">\n//               <FiCheck className=\"text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n//               <div>\n//                 <h4 className=\"font-medium\">Strong Understanding</h4>\n//                 <p className=\"text-sm\">You demonstrated mastery of:</p>\n//                 <ul className=\"list-disc pl-5 mt-1 text-sm space-y-1\">\n//                   {Array.from(\n//                     new Set(\n//                       currentQuiz.questions\n//                         .filter(\n//                           (q) =>\n//                             selectedAnswers[q.id] === q.correctAnswer && q.auestion_text\n//                         )\n//                         .map((q) => q.auestion_text)\n//                     )\n//                   ).map((auestion_text, i) => (\n//                     <li key={i}>{auestion_text}</li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {attemptsLeft > 0 && quizScore < 70 && (\n//           <div className=\"border-t pt-4\">\n//             <div className=\"flex items-start mb-3\">\n//               <FiInfo className=\"text-blue-500 mr-2 mt-0.5 flex-shrink-0\" />\n//               <div>\n//                 <h4 className=\"font-medium\">Ready for Retake?</h4>\n//                 <p className=\"text-sm\">\n//                   After reviewing, you'll get a new set of questions on the same\n//                   topics.\n//                 </p>\n//               </div>\n//             </div>\n//             <button\n//               onClick={prepareQuizRetake}\n//               className=\"w-full px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg\"\n//             >\n//               Retake Quiz ({attemptsLeft}{\" \"}\n//               {attemptsLeft === 1 ? \"attempt\" : \"attempts\"} left)\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default QuizReviewSection;\n// import {\n//   FiAlertTriangle,\n//   FiBookOpen,\n//   FiCheck,\n//   FiInfo,\n//   FiLock,\n//   FiX,\n// } from \"react-icons/fi\";\n// import { Link } from \"react-router-dom\";\n// import { motion, AnimatePresence } from \"framer-motion\";\n// import { useState } from \"react\";\n\n// const QuizReviewSection = ({\n//   quizScore,\n//   bestScore,\n//   quizAttempts,\n//   weakTopics,\n//   currentQuiz,\n//   selectedAnswers,\n//   attemptsLeft,\n//   courseId,\n//   prepareQuizRetake,\n// }) => {\n//   const maxAttempts = 3;\n//   const hasMaxAttempts = quizAttempts.length >= maxAttempts;\n//   const canRetake = attemptsLeft > 0 && quizScore < 70 && !hasMaxAttempts;\n//   const [isExpanded, setIsExpanded] = useState(true);\n\n//   // If no specific weak topics, use the quiz title as the general topic\n//   const effectiveWeakTopics =\n//     weakTopics.length > 0\n//       ? weakTopics\n//       : quizScore < 70\n//         ? [\"the quiz questions\"]\n//         : [];\n\n//   // Get all topics from questions (filtering out null/undefined)\n//   const allTopics = Array.from(\n//     new Set(\n//       currentQuiz?.questions?.map((q) => q.topic)?.filter((topic) => topic) // Remove null/undefined\n//     )\n//   );\n\n//   // If no specific topics exist in questions, use a generic message\n//   const hasSpecificTopics = allTopics.length > 0;\n\n//   // Animation variants\n//   const containerVariants = {\n//     hidden: { opacity: 0, y: 20 },\n//     visible: {\n//       opacity: 1,\n//       y: 0,\n//       transition: {\n//         duration: 0.3,\n//         ease: \"easeOut\",\n//       },\n//     },\n//   };\n\n//   const itemVariants = {\n//     hidden: { opacity: 0, y: 10 },\n//     visible: {\n//       opacity: 1,\n//       y: 0,\n//       transition: {\n//         duration: 0.2,\n//       },\n//     },\n//   };\n\n//   return (\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 p-6 flex items-center justify-center  z-40 transition-all duration-300 ease-out opacity-0 animate-fadeIn\">\n//       <div className=\"bg-white w-full max-w-2xl max-h-[90vh] space-y-5 rounded-xl shadow-lg border border-gray-100 p-5\">\n//         {/* Header with collapse button */}\n//         <div className=\"flex items-center justify-between\">\n//           <div className=\"flex items-center\">\n//             {quizScore >= 70 ? (\n//               <div className=\"p-2 bg-green-100 rounded-full mr-3\">\n//                 <FiCheck className=\"text-green-600 text-xl\" />\n//               </div>\n//             ) : (\n//               <div className=\"p-2 bg-yellow-100 rounded-full mr-3\">\n//                 <FiInfo className=\"text-yellow-600 text-xl\" />\n//               </div>\n//             )}\n//             <div>\n//               <h3 className=\"text-xl font-bold text-gray-800\">\n//                 Quiz {quizScore >= 70 ? \"Passed\" : \"Review Needed\"}\n//                 <span className=\"ml-2 px-3 py-1 rounded-full text-sm font-semibold bg-blue-100 text-blue-800\">\n//                   {quizScore}%\n//                 </span>\n//               </h3>\n//               <p className=\"text-sm text-gray-500\">\n//                 Best: {bestScore}% â€¢ Attempts: {quizAttempts.length}/\n//                 {maxAttempts}\n//               </p>\n//             </div>\n//           </div>\n//           <button\n//             onClick={() => setIsExpanded(!isExpanded)}\n//             className=\"p-2 rounded-full hover:bg-gray-100 transition-colors\"\n//           >\n//             <FiX className=\"text-gray-500\" />\n//           </button>\n//         </div>\n\n//         {isExpanded && (\n//           <div className=\"space-y-5 transition-all duration-300 ease-out\">\n//             {/* Review Section */}\n//             {quizScore < 70 ? (\n//               <div className=\"p-4 bg-gradient-to-r from-yellow-50 to-amber-50 rounded-lg border border-yellow-200 shadow-sm transition-all duration-200\">\n//                 <div className=\"flex items-start\">\n//                   <div className=\"p-2 bg-yellow-100 rounded-lg mr-3\">\n//                     <FiBookOpen className=\"text-yellow-600 text-xl\" />\n//                   </div>\n//                   <div>\n//                     <h4 className=\"font-bold text-gray-800 mb-2\">\n//                       Recommended Review\n//                     </h4>\n//                     <p className=\"text-gray-600 mb-3\">\n//                       {hasSpecificTopics\n//                         ? \"Focus on these topics before retrying:\"\n//                         : \"Review the quiz questions before retrying:\"}\n//                     </p>\n\n//                     {hasSpecificTopics ? (\n//                       <ul className=\"space-y-3\">\n//                         {effectiveWeakTopics.map((topic, i) => (\n//                           <li\n//                             key={i}\n//                             className=\"flex items-start bg-white p-3 rounded-lg shadow-xs border border-gray-100 transition-all duration-200 delay-100\"\n//                           >\n//                             <div className=\"p-1.5 bg-red-100 rounded-full mr-3\">\n//                               <FiAlertTriangle className=\"text-red-500\" />\n//                             </div>\n//                             <div>\n//                               <p className=\"font-medium text-gray-800\">\n//                                 {topic}\n//                               </p>\n//                               <Link\n//                                 to={`/courses/${courseId}/resources?topic=${encodeURIComponent(topic)}`}\n//                                 className=\"mt-1 inline-flex items-center text-sm text-blue-600 hover:text-blue-800 transition-colors\"\n//                               >\n//                                 Review Resources\n//                                 <svg\n//                                   className=\"w-4 h-4 ml-1\"\n//                                   fill=\"none\"\n//                                   stroke=\"currentColor\"\n//                                   viewBox=\"0 0 24 24\"\n//                                 >\n//                                   <path\n//                                     strokeLinecap=\"round\"\n//                                     strokeLinejoin=\"round\"\n//                                     strokeWidth={2}\n//                                     d=\"M14 5l7 7m0 0l-7 7m7-7H3\"\n//                                   />\n//                                 </svg>\n//                               </Link>\n//                             </div>\n//                           </li>\n//                         ))}\n//                       </ul>\n//                     ) : (\n//                       <div className=\"flex items-start bg-white p-3 rounded-lg shadow-xs border border-gray-100 transition-all duration-200 delay-100\">\n//                         <div className=\"p-1.5 bg-red-100 rounded-full mr-3\">\n//                           <FiAlertTriangle className=\"text-red-500\" />\n//                         </div>\n//                         <div>\n//                           <p className=\"font-medium text-gray-800\">\n//                             All quiz questions\n//                           </p>\n//                           <Link\n//                             to={`/courses/${courseId}/resources`}\n//                             className=\"mt-1 inline-flex items-center text-sm text-blue-600 hover:text-blue-800 transition-colors\"\n//                           >\n//                             Review Course Materials\n//                             <svg\n//                               className=\"w-4 h-4 ml-1\"\n//                               fill=\"none\"\n//                               stroke=\"currentColor\"\n//                               viewBox=\"0 0 24 24\"\n//                             >\n//                               <path\n//                                 strokeLinecap=\"round\"\n//                                 strokeLinejoin=\"round\"\n//                                 strokeWidth={2}\n//                                 d=\"M14 5l7 7m0 0l-7 7m7-7H3\"\n//                               />\n//                             </svg>\n//                           </Link>\n//                         </div>\n//                       </div>\n//                     )}\n//                   </div>\n//                 </div>\n//               </div>\n//             ) : (\n//               <div className=\"p-4 bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg border border-green-200 shadow-sm transition-all duration-200\">\n//                 <div className=\"flex items-start\">\n//                   <div className=\"p-2 bg-green-100 rounded-lg mr-3\">\n//                     <FiCheck className=\"text-green-600 text-xl\" />\n//                   </div>\n//                   <div>\n//                     <h4 className=\"font-bold text-gray-800 mb-2\">\n//                       Strong Understanding\n//                     </h4>\n//                     <p className=\"text-gray-600 mb-3\">\n//                       {hasSpecificTopics\n//                         ? \"You demonstrated mastery of:\"\n//                         : \"You demonstrated mastery of the quiz content\"}\n//                     </p>\n//                     {hasSpecificTopics && (\n//                       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n//                         {Array.from(\n//                           new Set(\n//                             currentQuiz.questions\n//                               .filter(\n//                                 (q) =>\n//                                   selectedAnswers[q.id] === q.correctAnswer &&\n//                                   q.topic\n//                               )\n//                               .map((q) => q.topic)\n//                           )\n//                         ).map((topic, i) => (\n//                           <div\n//                             key={i}\n//                             className=\"bg-white px-3 py-2 rounded-lg shadow-xs border border-gray-100 text-sm font-medium text-gray-700 transition-all duration-200\"\n//                           >\n//                             {topic}\n//                           </div>\n//                         ))}\n//                       </div>\n//                     )}\n//                   </div>\n//                 </div>\n//               </div>\n//             )}\n\n//             {/* Retake Section */}\n//             {hasMaxAttempts ? (\n//               <div className=\"pt-3 transition-all duration-200\">\n//                 <div className=\"flex items-start p-4 bg-gray-50 rounded-lg border border-gray-200\">\n//                   <div className=\"p-2 bg-gray-200 rounded-lg mr-3\">\n//                     <FiLock className=\"text-gray-600\" />\n//                   </div>\n//                   <div>\n//                     <h4 className=\"font-bold text-gray-800\">\n//                       Maximum Attempts Reached\n//                     </h4>\n//                     <p className=\"text-gray-600\">\n//                       You've used all {maxAttempts} attempts. Please proceed to\n//                       the next lesson.\n//                     </p>\n//                   </div>\n//                 </div>\n//               </div>\n//             ) : canRetake ? (\n//               <div className=\"pt-3 space-y-4 transition-all duration-200\">\n//                 <div className=\"flex items-start p-4 bg-blue-50 rounded-lg border border-blue-200\">\n//                   <div className=\"p-2 bg-blue-100 rounded-lg mr-3\">\n//                     <FiInfo className=\"text-blue-600\" />\n//                   </div>\n//                   <div>\n//                     <h4 className=\"font-bold text-gray-800\">\n//                       Ready for Retake?\n//                     </h4>\n//                     <p className=\"text-gray-600\">\n//                       After reviewing, you'll get a new set of questions on the\n//                       same\n//                       {hasSpecificTopics ? \" topics.\" : \" material.\"}\n//                     </p>\n//                   </div>\n//                 </div>\n//                 <button\n//                   onClick={prepareQuizRetake}\n//                   className=\"w-full px-6 py-3 bg-gradient-to-r from-yellow-400 to-amber-500 hover:from-yellow-500 hover:to-amber-600 text-white font-semibold rounded-lg shadow-md transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98]\"\n//                 >\n//                   Retake Quiz ({attemptsLeft}{\" \"}\n//                   {attemptsLeft === 1 ? \"attempt\" : \"attempts\"} left)\n//                 </button>\n//               </div>\n//             ) : null}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default QuizReviewSection;\nimport {\n  FiAlertTriangle,\n  FiBookOpen,\n  FiCheck,\n  FiInfo,\n  FiLock,\n  FiX,\n} from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useState, useEffect } from \"react\";\n\nconst QuizReviewSection = ({\n  quizScore,\n  bestScore,\n  quizAttempts,\n  weakTopics,\n  currentQuiz,\n  selectedAnswers,\n  attemptsLeft,\n  courseId,\n  prepareQuizRetake,\n  onClose,\n}) => {\n  const maxAttempts = 3;\n  const hasMaxAttempts = quizAttempts.length >= maxAttempts;\n  const canRetake = attemptsLeft > 0 && quizScore < 70 && !hasMaxAttempts;\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  // Get all topics from questions (filtering out null/undefined)\n  const allTopics = Array.from(\n    new Set(\n      currentQuiz?.questions?.map((q) => q.topic)?.filter((topic) => topic)\n    )\n  );\n\n  const hasSpecificTopics = allTopics.length > 0;\n\n  // Handle ESC key press\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [onClose]);\n\n  // Handle backdrop click\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Animation variants\n  const containerVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.3,\n        ease: \"easeOut\",\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 10 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.2,\n      },\n    },\n  };\n\n  return (\n    <div\n      className=\"fixed inset-0 bg-black bg-opacity-50 p-6 flex items-center justify-center z-50 transition-opacity duration-300\"\n      onClick={handleBackdropClick}\n    >\n      <motion.div\n        className=\"bg-white w-full max-w-2xl max-h-[90vh] rounded-xl shadow-lg border border-gray-100 overflow-hidden\"\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={containerVariants}\n      >\n        <div className=\"p-5 space-y-5\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              {quizScore >= 70 ? (\n                <div className=\"p-2 bg-green-100 rounded-full mr-3\">\n                  <FiCheck className=\"text-green-600 text-xl\" />\n                </div>\n              ) : (\n                <div className=\"p-2 bg-yellow-100 rounded-full mr-3\">\n                  <FiInfo className=\"text-yellow-600 text-xl\" />\n                </div>\n              )}\n              <div>\n                <h3 className=\"text-xl font-bold text-gray-800\">\n                  Quiz {quizScore >= 70 ? \"Passed\" : \"Review Needed\"}\n                  <span className=\"ml-2 px-3 py-1 rounded-full text-sm font-semibold bg-blue-100 text-blue-800\">\n                    {quizScore}%\n                  </span>\n                </h3>\n                <p className=\"text-sm text-gray-500\">\n                  Best: {bestScore}% â€¢ Attempts: {quizAttempts.length}/\n                  {maxAttempts}\n                </p>\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"p-2 rounded-full hover:bg-gray-100 transition-colors\"\n              aria-label=\"Close review\"\n            >\n              <FiX className=\"text-gray-500\" />\n            </button>\n          </div>\n\n          <AnimatePresence>\n            {isExpanded && (\n              <motion.div\n                className=\"space-y-5\"\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"hidden\"\n                variants={containerVariants}\n              >\n                {/* Content */}\n                {quizScore < 70 ? (\n                  <motion.div\n                    className=\"p-4 bg-gradient-to-r from-yellow-50 to-amber-50 rounded-lg border border-yellow-200 shadow-sm\"\n                    variants={itemVariants}\n                  >\n                    <div className=\"flex items-start\">\n                      <div className=\"p-2 bg-yellow-100 rounded-lg mr-3\">\n                        <FiBookOpen className=\"text-yellow-600 text-xl\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-bold text-gray-800 mb-2\">\n                          Recommended Review\n                        </h4>\n                        <p className=\"text-gray-600 mb-3\">\n                          {hasSpecificTopics\n                            ? \"Focus on these topics before retrying:\"\n                            : \"Review the quiz questions before retrying:\"}\n                        </p>\n\n                        {hasSpecificTopics ? (\n                          <ul className=\"space-y-3\">\n                            {weakTopics.map((topic, i) => (\n                              <motion.li\n                                key={i}\n                                className=\"flex items-start bg-white p-3 rounded-lg shadow-xs border border-gray-100\"\n                                variants={itemVariants}\n                              >\n                                <div className=\"p-1.5 bg-red-100 rounded-full mr-3\">\n                                  <FiAlertTriangle className=\"text-red-500\" />\n                                </div>\n                                <div>\n                                  <p className=\"font-medium text-gray-800\">\n                                    {topic}\n                                  </p>\n                                  <Link\n                                    to={`/courses/${courseId}/resources?topic=${encodeURIComponent(topic)}`}\n                                    className=\"mt-1 inline-flex items-center text-sm text-blue-600 hover:text-blue-800\"\n                                  >\n                                    Review Resources\n                                    <svg\n                                      className=\"w-4 h-4 ml-1\"\n                                      fill=\"none\"\n                                      stroke=\"currentColor\"\n                                      viewBox=\"0 0 24 24\"\n                                    >\n                                      <path\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M14 5l7 7m0 0l-7 7m7-7H3\"\n                                      />\n                                    </svg>\n                                  </Link>\n                                </div>\n                              </motion.li>\n                            ))}\n                          </ul>\n                        ) : (\n                          <motion.div\n                            className=\"flex items-start bg-white p-3 rounded-lg shadow-xs border border-gray-100\"\n                            variants={itemVariants}\n                          >\n                            <div className=\"p-1.5 bg-red-100 rounded-full mr-3\">\n                              <FiAlertTriangle className=\"text-red-500\" />\n                            </div>\n                            <div>\n                              <p className=\"font-medium text-gray-800\">\n                                All quiz questions\n                              </p>\n                              <Link\n                                to={`/courses/${courseId}/resources`}\n                                className=\"mt-1 inline-flex items-center text-sm text-blue-600 hover:text-blue-800\"\n                              >\n                                Review Course Materials\n                                <svg\n                                  className=\"w-4 h-4 ml-1\"\n                                  fill=\"none\"\n                                  stroke=\"currentColor\"\n                                  viewBox=\"0 0 24 24\"\n                                >\n                                  <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth={2}\n                                    d=\"M14 5l7 7m0 0l-7 7m7-7H3\"\n                                  />\n                                </svg>\n                              </Link>\n                            </div>\n                          </motion.div>\n                        )}\n                      </div>\n                    </div>\n                  </motion.div>\n                ) : (\n                  <motion.div\n                    className=\"p-4 bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg border border-green-200 shadow-sm\"\n                    variants={itemVariants}\n                  >\n                    <div className=\"flex items-start\">\n                      <div className=\"p-2 bg-green-100 rounded-lg mr-3\">\n                        <FiCheck className=\"text-green-600 text-xl\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-bold text-gray-800 mb-2\">\n                          Strong Understanding\n                        </h4>\n                        <p className=\"text-gray-600 mb-3\">\n                          {hasSpecificTopics\n                            ? \"You demonstrated mastery of:\"\n                            : \"You demonstrated mastery of the quiz content\"}\n                        </p>\n                        {hasSpecificTopics && (\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                            {Array.from(\n                              new Set(\n                                currentQuiz.questions\n                                  .filter(\n                                    (q) =>\n                                      selectedAnswers[q.id] ===\n                                        q.correctAnswer && q.topic\n                                  )\n                                  .map((q) => q.topic)\n                              )\n                            ).map((topic, i) => (\n                              <motion.div\n                                key={i}\n                                className=\"bg-white px-3 py-2 rounded-lg shadow-xs border border-gray-100 text-sm font-medium text-gray-700\"\n                                variants={itemVariants}\n                              >\n                                {topic}\n                              </motion.div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Retake Section */}\n                {hasMaxAttempts ? (\n                  <motion.div className=\"pt-3\" variants={itemVariants}>\n                    <div className=\"flex items-start p-4 bg-gray-50 rounded-lg border border-gray-200\">\n                      <div className=\"p-2 bg-gray-200 rounded-lg mr-3\">\n                        <FiLock className=\"text-gray-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-bold text-gray-800\">\n                          Maximum Attempts Reached\n                        </h4>\n                        <p className=\"text-gray-600\">\n                          You've used all {maxAttempts} attempts. Please proceed\n                          to the next lesson.\n                        </p>\n                      </div>\n                    </div>\n                  </motion.div>\n                ) : canRetake ? (\n                  <motion.div\n                    className=\"pt-3 space-y-4\"\n                    variants={itemVariants}\n                  >\n                    <div className=\"flex items-start p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                      <div className=\"p-2 bg-blue-100 rounded-lg mr-3\">\n                        <FiInfo className=\"text-blue-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-bold text-gray-800\">\n                          Ready for Retake?\n                        </h4>\n                        <p className=\"text-gray-600\">\n                          After reviewing, you'll get a new set of questions on\n                          the same {hasSpecificTopics ? \"topics.\" : \"material.\"}\n                        </p>\n                      </div>\n                    </div>\n                    <button\n                      onClick={prepareQuizRetake}\n                      className=\"w-full px-6 py-3 bg-gradient-to-r from-yellow-400 to-amber-500 hover:from-yellow-500 hover:to-amber-600 text-white font-semibold rounded-lg shadow-md transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98]\"\n                    >\n                      Retake Quiz ({attemptsLeft}{\" \"}\n                      {attemptsLeft === 1 ? \"attempt\" : \"attempts\"} left)\n                    </button>\n                  </motion.div>\n                ) : null}\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default QuizReviewSection;"],"names":["_ref","_currentQuiz$question","_currentQuiz$question2","quizScore","bestScore","quizAttempts","weakTopics","currentQuiz","selectedAnswers","attemptsLeft","courseId","prepareQuizRetake","onClose","hasMaxAttempts","length","canRetake","isExpanded","setIsExpanded","useState","hasSpecificTopics","Array","from","Set","questions","map","q","topic","filter","useEffect","handleKeyDown","e","key","window","addEventListener","removeEventListener","containerVariants","hidden","opacity","y","visible","transition","duration","ease","itemVariants","_jsx","className","onClick","target","currentTarget","children","motion","div","initial","animate","variants","_jsxs","FiCheck","FiInfo","FiX","AnimatePresence","exit","FiBookOpen","i","li","FiAlertTriangle","Link","to","encodeURIComponent","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","id","correctAnswer","FiLock"],"sourceRoot":""}